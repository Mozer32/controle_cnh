-- üîí Script para Configurar RLS (Row Level Security)
-- üìã Execute este c√≥digo no SQL Editor do Supabase

-- ========================================
-- 1. ATIVAR RLS NA TABELA
-- ========================================

-- Ativar Row Level Security na tabela usuarios_javascript
ALTER TABLE usuarios_javascript ENABLE ROW LEVEL SECURITY;

-- ========================================
-- 2. REMOVER POL√çTICAS EXISTENTES (se houver)
-- ========================================

-- Remover pol√≠ticas existentes para evitar conflitos
DROP POLICY IF EXISTS "Usu√°rios autenticados podem ler" ON usuarios_javascript;
DROP POLICY IF EXISTS "Usu√°rios autenticados podem inserir" ON usuarios_javascript;
DROP POLICY IF EXISTS "Usu√°rios autenticados podem atualizar" ON usuarios_javascript;
DROP POLICY IF EXISTS "Usu√°rios autenticados podem deletar" ON usuarios_javascript;

-- ========================================
-- 3. CRIAR POL√çTICAS DE SEGURAN√áA
-- ========================================

-- Pol√≠tica 1: Usu√°rios autenticados podem LER dados
CREATE POLICY "Usu√°rios autenticados podem ler" ON usuarios_javascript
FOR SELECT USING (auth.role() = 'authenticated');

-- Pol√≠tica 2: Usu√°rios autenticados podem INSERIR dados
CREATE POLICY "Usu√°rios autenticados podem inserir" ON usuarios_javascript
FOR INSERT WITH CHECK (auth.role() = 'authenticated');

-- Pol√≠tica 3: Usu√°rios autenticados podem ATUALIZAR dados
CREATE POLICY "Usu√°rios autenticados podem atualizar" ON usuarios_javascript
FOR UPDATE USING (auth.role() = 'authenticated');

-- Pol√≠tica 4: Usu√°rios autenticados podem DELETAR dados
CREATE POLICY "Usu√°rios autenticados podem deletar" ON usuarios_javascript
FOR DELETE USING (auth.role() = 'authenticated');

-- ========================================
-- 4. VERIFICAR CONFIGURA√á√ÉO
-- ========================================

-- Verificar se RLS est√° ativo
SELECT schemaname, tablename, rowsecurity 
FROM pg_tables 
WHERE tablename = 'usuarios_javascript';

-- Verificar pol√≠ticas criadas
SELECT policyname, permissive, roles, cmd, qual 
FROM pg_policies 
WHERE tablename = 'usuarios_javascript';

-- ========================================
-- 5. TESTE DE SEGURAN√áA
-- ========================================

-- Teste 1: Tentar acessar sem autentica√ß√£o (deve falhar)
-- SELECT * FROM usuarios_javascript;

-- Teste 2: Verificar se a tabela existe
SELECT COUNT(*) as total_registros FROM usuarios_javascript;

-- ========================================
-- ‚úÖ CONFIGURA√á√ÉO CONCLU√çDA
-- ========================================

-- Resultado esperado:
-- 1. "Success. No rows returned" para todas as pol√≠ticas
-- 2. rowsecurity = true na verifica√ß√£o
-- 3. 4 pol√≠ticas criadas na verifica√ß√£o
-- 4. total_registros mostra quantidade de dados

-- ========================================
-- üìä PR√ìXIMOS PASSOS
-- ========================================

-- 1. Teste a aplica√ß√£o localmente
-- 2. Verifique se o login funciona
-- 3. Confirme se os dados s√£o carregados
-- 4. Teste sem login (deve falhar)

-- ========================================
-- üö® SE ALGO DER ERRADO
-- ========================================

-- Para desativar RLS temporariamente:
-- ALTER TABLE usuarios_javascript DISABLE ROW LEVEL SECURITY;

-- Para remover todas as pol√≠ticas:
-- DROP POLICY IF EXISTS "Usu√°rios autenticados podem ler" ON usuarios_javascript;
-- DROP POLICY IF EXISTS "Usu√°rios autenticados podem inserir" ON usuarios_javascript;
-- DROP POLICY IF EXISTS "Usu√°rios autenticados podem atualizar" ON usuarios_javascript;
-- DROP POLICY IF EXISTS "Usu√°rios autenticados podem deletar" ON usuarios_javascript; 